@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model List<Library_Management_System.Models.Category>;
@{
ViewData["Title"] = "Add Book";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Add New Book</h5>
                </div>
                <div class="card-body">
                    <form id="bookForm">
                        <!-- Book Name -->
                        <div class="mb-3">
                            <label for="BookName" class="form-label">Book Name</label>
                            <input type="text" class="form-control" id="BookName" name="book_name" placeholder="Enter book name" required />
                            <span class="text-danger small" id="BookNameError"></span>
                        </div>

                        <!-- Author -->
                        <div class="mb-3">
                            <label for="Author" class="form-label">Author</label>
                            <input type="text" class="form-control" id="Author" name="author" placeholder="Enter author name" required />
                            <span class="text-danger small" id="AuthorError"></span>
                        </div>

                        <!-- Publisher -->
                        <div class="mb-3">
                            <label for="Publisher" class="form-label">Publisher</label>
                            <input type="text" class="form-control" id="Publisher" name="publisher" placeholder="Enter publisher" />
                            <span class="text-danger small" id="PublisherError"></span>
                        </div>

                        <!-- ISBN -->
                        <div class="mb-3">
                            <label for="ISBN" class="form-label">ISBN</label>
                            <input type="text" class="form-control" id="ISBN" name="isbn" placeholder="Enter ISBN number" />
                            <span class="text-danger small" id="ISBNError"></span>
                        </div>

                        <!-- Category -->
                        <div class="mb-3">
                            <label for="CategoryId" class="form-label">Category</label>
                            <select class="form-select" id="CategoryId" name="category_id" required>
                                <option value="">Select a category</option>
                                @foreach (var category in Model)
                                {
                                    <option value="@category.Category_Id">@category.Category_Name</option>
                                }
                                
                            </select>
                            <span class="text-danger small" id="CategoryIdError"></span>
                        </div>

                        <!-- Price -->
                        <div class="mb-3">
                            <label for="Price" class="form-label">Price</label>
                            <input type="number" step="0.01" class="form-control" id="Price" name="price" placeholder="Enter price" required />
                            <span class="text-danger small" id="PriceError"></span>
                        </div>

                        <!-- Publication Date -->
                        <div class="mb-3">
                            <label for="PublicationDate" class="form-label">Publication Date</label>
                            <input type="date" class="form-control" id="PublicationDate" name="publication_date" />
                            <span class="text-danger small" id="PublicationDateError"></span>
                        </div>

                        <!-- Quantity -->
                        <div class="mb-3">
                            <label for="Quantity" class="form-label">Quantity</label>
                            <input type="number" class="form-control" id="Quantity" name="quantity" placeholder="Enter available quantity" min="1" />
                            <span class="text-danger small" id="QuantityError"></span>
                        </div>

                        <!-- Submit Button -->
                        <button type="submit" class="btn btn-success w-100">Add Book</button>
                    </form>

                    <!-- Message -->
                    <div id="message" class="mt-3"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {


<script>
    $(document).ready(function () {

        $("#bookForm").on("submit", async(e)=> {
            e.preventDefault();
            let isValid = true;

            $("span.text-danger").text("");
            var category_id=document.getElementById("CategoryId").value;
            console.log(category_id);
            if(category_id===0||category_id==="") {
                const err = document.getElementById("CategoryIdError");
                err.textContent('Category is required');
                isValid = false;
                return;
            }

            $("#bookForm input, #bookForm select").each(function () {
                let input = $(this);
                let value = input.val().trim();
                let errorSpan = $("#" + input.attr("id") + "Error");

                if (input.prop("required") && value === "" || value === null) {
                    errorSpan.text("This field cannot be empty");
                    isValid = false;
                }
            });
            if(isValid){
                Swal.fire({
                    title: "Are you sure?",
                    text:"This book will be saved in database",
                    showCancelButton: true,

                }).then(async (result) => {


                    if (result.isConfirmed) {
                        try {
                            const response = await fetch('/api/book-api/create', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    CategoryId:category_id,
                                    BookName: $("#BookName").val(),
                                    Author: $("#Author").val(),
                                    Publisher: $("#Publisher").val(),
                                    ISBN: $("#ISBN").val(),
                                    Price: $("#Price").val(),
                                    Quantity: $("#Quantity").val(),
                                    PublishDate: $('#PublicationDate').val()
                                })
                            });

                            if (response.ok) {
                              Swal.fire({
                                  icon: "success",
                                  text: "Book has been added successfully",
                                  showConfirmButton: true,
                                  timer: 1500,
                              }).then(()=>{
                                  window.location.href = "/book";
                              });
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    text: response.message || "Something went wrong",
                                    showConfirmButton: true,
                                    timer: 1500,
                                });
                              
                            }
                        } catch (error) {
                            console.log(error);
                        }
                    }
                });

            }
        });
        $("#bookForm input, #bookForm select").on("input change", function () {
            $("#" + $(this).attr("id") + "Error").text("");
        });
        
       
    });
</script>
}
